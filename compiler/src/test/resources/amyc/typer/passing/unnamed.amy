// Module that should be included every time
// This is a draft of a module that should exist in the Context and every file should have access to it
// This can be implemented after the `use`-statement feature
module unnamed

    // All builtin operators
    native infix fn + (lhs : Int, rhs : Int) : Int
    native infix fn - (lhs : Int, rhs : Int) : Int
    native infix fn * (lhs : Int, rhs : Int) : Int
    native infix fn / (lhs : Int, rhs : Int) : Int
    native infix fn % (lhs : Int, rhs : Int) : Int
    native infix fn < (lhs : Int, rhs : Int) : Boolean
    native infix fn <= (lhs : Int, rhs : Int) : Boolean
    native infix fn && (lhs : Boolean, rhs : Boolean) : Boolean
    native infix fn || (lhs : Boolean, rhs : Boolean) : Boolean
    native infix fn == [A](lhs : A, rhs : A) : Boolean
    native infix fn ++ (lhs : String, rhs : String) : String

end unnamed